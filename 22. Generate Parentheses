class Solution {
public:
    vector<string>result;
   bool isValid(string &current){
   int cnt=0;
   for(auto it:current){
    if(it=='('){
        cnt++;
    }
    else{
        cnt--;
        if(cnt<0){
            return false;
        }
    }
   }
     return cnt==0;
   }



    void solve( string current,int n){
        
        if(current.length()==2*n){
            if(isValid( current)){
                result.push_back(current);
            }
            return;
        }

       current.push_back('(');
       solve(current,n);
       current.pop_back();
       current.push_back(')');
       solve(current,n);
       current.pop_back();


    }
    vector<string> generateParenthesis(int n) {
       
        string current="";
        solve(current,n);
        return result;
    }
};
